name: Release CI

on:
  push:
    tags:
      - 'v*'

jobs:
  build-stage:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - build: linux
            os: ubuntu-latest
            arch: x86_64
            target: x86_64-unknown-linux-gnu
          - build: macos
            os: macos-latest
            arch: x86_64
            target: x86_64-apple-darwin
          - build: macos
            os: macos-latest
            arch: aarch64
            target: aarch64-apple-darwin
          - build: windows
            os: windows-latest
            arch: x86_64
            target: x86_64-pc-windows-msvc


    steps:
      - name: check out code
        uses: actions/checkout@v3

      - name: Install dependencies
        uses: actions/setup-node@v3
      - run: npm install
      - if : matrix.os == 'ubuntu-latest'
        run: sudo apt-get install rpm

      - name: build the app
        if: matrix.os == 'windows-latest' || matrix.os == 'ubuntu-latest'
        run: npm run build:electron
      - if: matrix.os == 'macos-latest' && matrix.arch == 'x86_64'
        run: npm run build:mac:dmg:x64
      - if: matrix.os == 'macos-latest' && matrix.arch == 'aarch64'
        run: npm run build:mac:dmg:arm64

      - name: ls build
        run: ls -R release/**

      - uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: |
            release/**/*windows*.*
            release/**/*mac*.*
            release/**/*linux*.*
          retention-days: 3

  release-stage:
    needs: build-stage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v2
        with:
          name: artifacts
          path: artifacts
      - name: Create Release
        uses: softprops/action-gh-release@master
        with:
          token: ${{ secrets.RELEASE_TOKEN }}
          tag_name: v${{ github.ref }}
          name: Gostx v${{ github.ref }}
          body: See the assets to download this version and install.
          prerelease: false
          generate_release_notes: false
          files: 'artifacts/**'